def binary_search(num_find, arreglo)
  final = (arreglo.size) -1
  comienzo = 0
  mitad = 0
    
  while num_find != arreglo[mitad]
    #if mitad != nil  
      if mitad == nil
        mitad = -1

      elsif num_find < arreglo[mitad]
        final = mitad
        mitad = ((comienzo + final)/2)
      else
        comienzo = mitad
        mitad = ((comienzo + final)/2) +1 
      end
    # else
    # mitad = -1 
    # end 
  end

  mitad
end


p binary_search(1, [1]) == 0
p binary_search(4, [1,2,3]) == -1
p binary_search(4, [1,2,3,4,5]) == 3
p binary_search(6, [1,2,3,4,5,6,7,8,9]) == 5
p binary_search(2, [1,2,3,5,6,7,8,9,10,11]) == 1
p binary_search(5, [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]) == 4
p binary_search(30, [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]) 
